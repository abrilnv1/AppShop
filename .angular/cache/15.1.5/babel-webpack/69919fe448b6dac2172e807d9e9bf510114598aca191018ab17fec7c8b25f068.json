{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/store.service\";\nimport * as i2 from \"src/app/services/payment.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CartComponent_article_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"article\", 6)(1, \"div\", 7)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"i\", 12);\n    i0.ɵɵlistener(\"click\", function CartComponent_article_1_Template_i_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateUnits(\"minus\", product_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"i\", 13);\n    i0.ɵɵlistener(\"click\", function CartComponent_article_1_Template_i_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateUnits(\"add\", product_r2.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"i\", 14);\n    i0.ɵɵlistener(\"click\", function CartComponent_article_1_Template_i_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteProduct(product_r2.id));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(product_r2.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"$ \", product_r2.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", product_r2.cantidad, \" uds\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"$ \", ctx_r0.totalProduct(product_r2.price, product_r2.cantidad), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(product_r2.cantidad);\n  }\n}\nfunction CartComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"form\", 16);\n    i0.ɵɵlistener(\"submit\", function CartComponent_div_8_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.submitPaymentInfo());\n    });\n    i0.ɵɵelementStart(2, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CartComponent_div_8_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.paymentInfo.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function CartComponent_div_8_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.paymentInfo.phone = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function CartComponent_div_8_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.paymentInfo.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 20);\n    i0.ɵɵtext(6, \"Enviar Informaci\\u00F3n de Pago\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.paymentInfo.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.paymentInfo.phone);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.paymentInfo.email);\n  }\n}\nexport class CartComponent {\n  constructor(storeService, paymentService) {\n    this.storeService = storeService;\n    this.paymentService = paymentService;\n    this.myCart$ = this.storeService.myCart$;\n    this.viewCart = false;\n    this.showPaymentForm = false; // Nuevo estado para mostrar/ocultar el formulario de pago\n    this.paymentInfo = {\n      name: '',\n      email: '',\n      phone: ''\n    };\n  }\n  updateUnits(operation, id) {}\n  totalProduct(price, units) {\n    return price * units;\n  }\n  deleteProduct(id) {}\n  totalCart() {\n    // Asumiendo que `this.storeService.totalCart()` calcula el total y siempre retorna un número.\n    return this.storeService.totalCart();\n  }\n  proceedToPayment() {\n    // Cambio: En lugar de directamente generar el link de pago,\n    // ahora mostramos el formulario de pago para que el usuario pueda introducir información adicional\n    this.showPaymentForm = true;\n  }\n  submitPaymentInfo() {\n    const total = this.totalCart(); // Obtenemos el total del carrito\n    // Aquí, incluimos la información adicional en la solicitud al servicio de pago\n    this.paymentService.createPaymentLink({\n      ...this.paymentInfo,\n      amount: total // Añadimos el total del carrito\n    }).subscribe({\n      next: response => {\n        // Manejar la respuesta, por ejemplo, abriendo el link de pago para el usuario\n        window.open(response.paymentLink, '_blank');\n        this.showPaymentForm = false; // Ocultamos el formulario después de enviar la información\n      },\n\n      error: error => {\n        console.error('Error al crear el link de pago:', error);\n        // Aquí podrías manejar el error, posiblemente mostrando un mensaje al usuario\n      }\n    });\n  }\n}\n\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.StoreService), i0.ɵɵdirectiveInject(i2.PaymentService));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"productCart-wrapper\"], [\"class\", \"productCart\", 4, \"ngFor\", \"ngForOf\"], [1, \"cartTotal\"], [1, \"cartTotal-total\"], [1, \"proceed-to-payment-btn\", 3, \"click\"], [\"class\", \"form-container\", 4, \"ngIf\"], [1, \"productCart\"], [1, \"productCart-body\"], [1, \"productCart-body-info\"], [1, \"productCart-total\"], [1, \"productCart-buttons\"], [1, \"productCart-buttons-operators\"], [1, \"fa-solid\", \"fa-minus\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\", 3, \"click\"], [1, \"form-container\"], [3, \"submit\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Nombre Completo\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"phone\", \"name\", \"phone\", \"placeholder\", \"N\\u00FAmero telef\\u00F3nico\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Correo Electr\\u00F3nico\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CartComponent_article_1_Template, 19, 5, \"article\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"p\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CartComponent_Template_button_click_6_listener() {\n        return ctx.proceedToPayment();\n      });\n      i0.ɵɵtext(7, \"Proceder al Pago\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, CartComponent_div_8_Template, 7, 3, \"div\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 3, ctx.myCart$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Total: $ \", ctx.totalCart(), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPaymentForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.AsyncPipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 320:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: expected \\\\\\\";\\\\\\\".\\\\n    \\u2577\\\\n112 \\u2502             background-color: #eb1a44, 0, 18);\\\\r\\\\n    \\u2502                                             ^\\\\n    \\u2575\\\\n  src\\\\\\\\app\\\\\\\\components\\\\\\\\cart\\\\\\\\cart.component.scss 112:45  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[320]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CartComponent","constructor","storeService","paymentService","myCart$","name","email","phone","updateUnits","operation","id","totalProduct","price","units","deleteProduct","totalCart","proceedToPayment","showPaymentForm","submitPaymentInfo","total","createPaymentLink","paymentInfo","amount","subscribe","next","response","window","open","paymentLink","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\abril\\Desktop\\angular\\appShop\\src\\app\\components\\cart\\cart.component.html","C:\\Users\\abril\\Desktop\\angular\\appShop\\src\\app\\components\\cart\\cart.component.ts"],"sourcesContent":["<div class=\"productCart-wrapper\">\n  <article class=\"productCart\" *ngFor=\"let product of myCart$ | async\">\n    <div class=\"productCart-body\">\n      <p>{{ product.title }}</p>\n      <div class=\"productCart-body-info\">\n        <p>$ {{ product.price }}</p>\n        <p>{{ product.cantidad }} uds</p>\n      </div>\n    </div>\n    <div class=\"productCart-total\">\n      <p>$ {{ totalProduct(product.price, product.cantidad) }}</p>\n    </div>\n    <div class=\"productCart-buttons\">\n      <div class=\"productCart-buttons-operators\">\n        <i\n          class=\"fa-solid fa-minus\"\n          (click)=\"updateUnits('minus', product.id)\"></i>\n        <span>{{ product.cantidad }}</span>\n        <i\n          class=\"fa-solid fa-plus\"\n          (click)=\"updateUnits('add', product.id)\"></i>\n      </div>\n      <i class=\"fa-solid fa-trash\" (click)=\"deleteProduct(product.id)\"></i>\n    </div>\n  </article>\n  <div class=\"cartTotal\">\n    <p class=\"cartTotal-total\">Total: $ {{ totalCart() }}</p>\n    <button class=\"proceed-to-payment-btn\" (click)=\"proceedToPayment()\">Proceder al Pago</button>\n\n    <div *ngIf=\"showPaymentForm\" class=\"form-container\">\n      <form (submit)=\"submitPaymentInfo()\">\n        <input type=\"text\" [(ngModel)]=\"paymentInfo.name\" name=\"name\" placeholder=\"Nombre Completo\" required>\n        <input type=\"phone\" [(ngModel)]=\"paymentInfo.phone\" name=\"phone\" placeholder=\"Número telefónico\" required>\n        <input type=\"email\" [(ngModel)]=\"paymentInfo.email\" name=\"email\" placeholder=\"Correo Electrónico\" required>\n        <button type=\"submit\">Enviar Información de Pago</button>\n      </form>\n    </div>\n\n\n</div>\n","import { Component } from '@angular/core';\nimport { StoreService } from 'src/app/services/store.service';\nimport { PaymentService } from 'src/app/services/payment.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent {\n  myCart$ = this.storeService.myCart$;\n  viewCart: boolean = false;\n  showPaymentForm: boolean = false; // Nuevo estado para mostrar/ocultar el formulario de pago\n  paymentInfo = { // Objeto para recoger la información del formulario de pago\n    name: '',\n    email: '',\n    phone: ''\n  };\n\n  constructor(private storeService: StoreService, private paymentService: PaymentService) { }\n\n  updateUnits(operation: string, id: string) {\n  }\n\n  totalProduct(price: number, units: number): number {\n    return price * units;\n  }\n  \n\n  deleteProduct(id: string): void {\n  }\n\n  totalCart(): number {\n    // Asumiendo que `this.storeService.totalCart()` calcula el total y siempre retorna un número.\n    return this.storeService.totalCart();\n  }\n\n  proceedToPayment(): void {\n    // Cambio: En lugar de directamente generar el link de pago,\n    // ahora mostramos el formulario de pago para que el usuario pueda introducir información adicional\n    this.showPaymentForm = true;\n  }\n\n  submitPaymentInfo(): void {\n    const total = this.totalCart(); // Obtenemos el total del carrito\n\n    // Aquí, incluimos la información adicional en la solicitud al servicio de pago\n    this.paymentService.createPaymentLink({\n      ...this.paymentInfo, // Desestructuramos paymentInfo para incluir name, email, etc.\n      amount: total // Añadimos el total del carrito\n    }).subscribe({\n      next: (response) => {\n        // Manejar la respuesta, por ejemplo, abriendo el link de pago para el usuario\n        window.open(response.paymentLink, '_blank');\n        this.showPaymentForm = false; // Ocultamos el formulario después de enviar la información\n      },\n      error: (error) => {\n        console.error('Error al crear el link de pago:', error);\n        // Aquí podrías manejar el error, posiblemente mostrando un mensaje al usuario\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}